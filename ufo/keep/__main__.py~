import sys
import numpy as np

from skimage import io
from skimage.transform import resize, rotate
from skimage.draw import polygon, ellipse

from numpy.fft import ifftshift, ifft2, fftshift, fft2
from numpy import exp, pi, mean, var, std, abs, sin, cos, sum

import argparse

sys.path.append('../')
from turbulence.utils.ft import ft_sh_phase_screen
from generators import generate_ellipse, generate_poly

def main():
    parser = argparse.ArgumentParser(description='Create UFO dataset.')
    parser.add_argument('--ntrain', type=int, nargs=1, help='Number of samples to generate for the training dataset')
    args = parser.parse_args()
    print(args)

    Uin = generate_ellipse()
    Uout = ft_sh_phase_screen(Uin, N=512, Lout=10, Lin=1e-3, deltax=0.005, wvl=0.532e-6, Dz=10e3, nscreen=20, kpow=22/6, Rytov=0.02, Np=5)
    print(abs(Uout))

if __name__ == "__main__":
    main()

#print(len(data))
#print(type(data))

#lst = data.files

#for item in lst:
#	print(item)
#	print(data[item])
#
#	print(len(data[item]))
#	print(type(data[item]))
#
#print(data['x_train'][0].shape)
#
#print('yes')
